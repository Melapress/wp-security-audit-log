<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace WSAL_Vendor\Twilio\Rest\Api\V2010\Account;

use WSAL_Vendor\Twilio\Deserialize;
use WSAL_Vendor\Twilio\Exceptions\TwilioException;
use WSAL_Vendor\Twilio\InstanceResource;
use WSAL_Vendor\Twilio\Options;
use WSAL_Vendor\Twilio\Rest\Api\V2010\Account\Message\FeedbackList;
use WSAL_Vendor\Twilio\Rest\Api\V2010\Account\Message\MediaList;
use WSAL_Vendor\Twilio\Values;
use WSAL_Vendor\Twilio\Version;
/**
 * @property string $body
 * @property string $numSegments
 * @property string $direction
 * @property string $from
 * @property string $to
 * @property \DateTime $dateUpdated
 * @property string $price
 * @property string $errorMessage
 * @property string $uri
 * @property string $accountSid
 * @property string $numMedia
 * @property string $status
 * @property string $messagingServiceSid
 * @property string $sid
 * @property \DateTime $dateSent
 * @property \DateTime $dateCreated
 * @property int $errorCode
 * @property string $priceUnit
 * @property string $apiVersion
 * @property array $subresourceUris
 */
class MessageInstance extends \WSAL_Vendor\Twilio\InstanceResource
{
    protected $_media;
    protected $_feedback;
    /**
     * Initialize the MessageInstance
     *
     * @param Version $version Version that contains the resource
     * @param mixed[] $payload The response payload
     * @param string $accountSid The SID of the Account that created the resource
     * @param string $sid The unique string that identifies the resource
     */
    public function __construct(\WSAL_Vendor\Twilio\Version $version, array $payload, string $accountSid, string $sid = null)
    {
        parent::__construct($version);
        // Marshaled Properties
        $this->properties = ['body' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'body'), 'numSegments' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'num_segments'), 'direction' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'direction'), 'from' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'from'), 'to' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'to'), 'dateUpdated' => \WSAL_Vendor\Twilio\Deserialize::dateTime(\WSAL_Vendor\Twilio\Values::array_get($payload, 'date_updated')), 'price' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'price'), 'errorMessage' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'error_message'), 'uri' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'uri'), 'accountSid' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'account_sid'), 'numMedia' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'num_media'), 'status' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'status'), 'messagingServiceSid' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'messaging_service_sid'), 'sid' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'sid'), 'dateSent' => \WSAL_Vendor\Twilio\Deserialize::dateTime(\WSAL_Vendor\Twilio\Values::array_get($payload, 'date_sent')), 'dateCreated' => \WSAL_Vendor\Twilio\Deserialize::dateTime(\WSAL_Vendor\Twilio\Values::array_get($payload, 'date_created')), 'errorCode' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'error_code'), 'priceUnit' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'price_unit'), 'apiVersion' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'api_version'), 'subresourceUris' => \WSAL_Vendor\Twilio\Values::array_get($payload, 'subresource_uris')];
        $this->solution = ['accountSid' => $accountSid, 'sid' => $sid ?: $this->properties['sid']];
    }
    /**
     * Generate an instance context for the instance, the context is capable of
     * performing various actions.  All instance actions are proxied to the context
     *
     * @return MessageContext Context for this MessageInstance
     */
    protected function proxy() : \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\MessageContext
    {
        if (!$this->context) {
            $this->context = new \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\MessageContext($this->version, $this->solution['accountSid'], $this->solution['sid']);
        }
        return $this->context;
    }
    /**
     * Delete the MessageInstance
     *
     * @return bool True if delete succeeds, false otherwise
     * @throws TwilioException When an HTTP error occurs.
     */
    public function delete() : bool
    {
        return $this->proxy()->delete();
    }
    /**
     * Fetch the MessageInstance
     *
     * @return MessageInstance Fetched MessageInstance
     * @throws TwilioException When an HTTP error occurs.
     */
    public function fetch() : \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\MessageInstance
    {
        return $this->proxy()->fetch();
    }
    /**
     * Update the MessageInstance
     *
     * @param array|Options $options Optional Arguments
     * @return MessageInstance Updated MessageInstance
     * @throws TwilioException When an HTTP error occurs.
     */
    public function update(array $options = []) : \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\MessageInstance
    {
        return $this->proxy()->update($options);
    }
    /**
     * Access the media
     */
    protected function getMedia() : \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\Message\MediaList
    {
        return $this->proxy()->media;
    }
    /**
     * Access the feedback
     */
    protected function getFeedback() : \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\Message\FeedbackList
    {
        return $this->proxy()->feedback;
    }
    /**
     * Magic getter to access properties
     *
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get(string $name)
    {
        if (\array_key_exists($name, $this->properties)) {
            return $this->properties[$name];
        }
        if (\property_exists($this, '_' . $name)) {
            $method = 'get' . \ucfirst($name);
            return $this->{$method}();
        }
        throw new \WSAL_Vendor\Twilio\Exceptions\TwilioException('Unknown property: ' . $name);
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString() : string
    {
        $context = [];
        foreach ($this->solution as $key => $value) {
            $context[] = "{$key}={$value}";
        }
        return '[Twilio.Api.V2010.MessageInstance ' . \implode(' ', $context) . ']';
    }
}
