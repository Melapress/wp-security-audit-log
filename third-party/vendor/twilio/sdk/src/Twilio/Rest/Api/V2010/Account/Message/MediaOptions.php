<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace WSAL_Vendor\Twilio\Rest\Api\V2010\Account\Message;

use WSAL_Vendor\Twilio\Options;
use WSAL_Vendor\Twilio\Values;
abstract class MediaOptions
{
    /**
     * @param string $dateCreatedBefore Only include media that was created on this
     *                                  date
     * @param string $dateCreated Only include media that was created on this date
     * @param string $dateCreatedAfter Only include media that was created on this
     *                                 date
     * @return ReadMediaOptions Options builder
     */
    public static function read(string $dateCreatedBefore = \WSAL_Vendor\Twilio\Values::NONE, string $dateCreated = \WSAL_Vendor\Twilio\Values::NONE, string $dateCreatedAfter = \WSAL_Vendor\Twilio\Values::NONE) : \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\Message\ReadMediaOptions
    {
        return new \WSAL_Vendor\Twilio\Rest\Api\V2010\Account\Message\ReadMediaOptions($dateCreatedBefore, $dateCreated, $dateCreatedAfter);
    }
}
class ReadMediaOptions extends \WSAL_Vendor\Twilio\Options
{
    /**
     * @param string $dateCreatedBefore Only include media that was created on this
     *                                  date
     * @param string $dateCreated Only include media that was created on this date
     * @param string $dateCreatedAfter Only include media that was created on this
     *                                 date
     */
    public function __construct(string $dateCreatedBefore = \WSAL_Vendor\Twilio\Values::NONE, string $dateCreated = \WSAL_Vendor\Twilio\Values::NONE, string $dateCreatedAfter = \WSAL_Vendor\Twilio\Values::NONE)
    {
        $this->options['dateCreatedBefore'] = $dateCreatedBefore;
        $this->options['dateCreated'] = $dateCreated;
        $this->options['dateCreatedAfter'] = $dateCreatedAfter;
    }
    /**
     * Only include media that was created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read media that was created on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read media that was created on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read media that was created on or after midnight of this date.
     *
     * @param string $dateCreatedBefore Only include media that was created on this
     *                                  date
     * @return $this Fluent Builder
     */
    public function setDateCreatedBefore(string $dateCreatedBefore) : self
    {
        $this->options['dateCreatedBefore'] = $dateCreatedBefore;
        return $this;
    }
    /**
     * Only include media that was created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read media that was created on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read media that was created on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read media that was created on or after midnight of this date.
     *
     * @param string $dateCreated Only include media that was created on this date
     * @return $this Fluent Builder
     */
    public function setDateCreated(string $dateCreated) : self
    {
        $this->options['dateCreated'] = $dateCreated;
        return $this;
    }
    /**
     * Only include media that was created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read media that was created on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read media that was created on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read media that was created on or after midnight of this date.
     *
     * @param string $dateCreatedAfter Only include media that was created on this
     *                                 date
     * @return $this Fluent Builder
     */
    public function setDateCreatedAfter(string $dateCreatedAfter) : self
    {
        $this->options['dateCreatedAfter'] = $dateCreatedAfter;
        return $this;
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString() : string
    {
        $options = \http_build_query(\WSAL_Vendor\Twilio\Values::of($this->options), '', ' ');
        return '[Twilio.Api.V2010.ReadMediaOptions ' . $options . ']';
    }
}
