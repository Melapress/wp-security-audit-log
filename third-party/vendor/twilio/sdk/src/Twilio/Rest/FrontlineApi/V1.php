<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */
namespace WSAL_Vendor\Twilio\Rest\FrontlineApi;

use WSAL_Vendor\Twilio\Domain;
use WSAL_Vendor\Twilio\Exceptions\TwilioException;
use WSAL_Vendor\Twilio\InstanceContext;
use WSAL_Vendor\Twilio\Rest\FrontlineApi\V1\UserList;
use WSAL_Vendor\Twilio\Version;
/**
 * @property UserList $users
 * @method \Twilio\Rest\FrontlineApi\V1\UserContext users(string $sid)
 */
class V1 extends \WSAL_Vendor\Twilio\Version
{
    protected $_users;
    /**
     * Construct the V1 version of FrontlineApi
     *
     * @param Domain $domain Domain that contains the version
     */
    public function __construct(\WSAL_Vendor\Twilio\Domain $domain)
    {
        parent::__construct($domain);
        $this->version = 'v1';
    }
    protected function getUsers() : \WSAL_Vendor\Twilio\Rest\FrontlineApi\V1\UserList
    {
        if (!$this->_users) {
            $this->_users = new \WSAL_Vendor\Twilio\Rest\FrontlineApi\V1\UserList($this);
        }
        return $this->_users;
    }
    /**
     * Magic getter to lazy load root resources
     *
     * @param string $name Resource to return
     * @return \Twilio\ListResource The requested resource
     * @throws TwilioException For unknown resource
     */
    public function __get(string $name)
    {
        $method = 'get' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return $this->{$method}();
        }
        throw new \WSAL_Vendor\Twilio\Exceptions\TwilioException('Unknown resource ' . $name);
    }
    /**
     * Magic caller to get resource contexts
     *
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call(string $name, array $arguments) : \WSAL_Vendor\Twilio\InstanceContext
    {
        $property = $this->{$name};
        if (\method_exists($property, 'getContext')) {
            return \call_user_func_array(array($property, 'getContext'), $arguments);
        }
        throw new \WSAL_Vendor\Twilio\Exceptions\TwilioException('Resource does not have a context');
    }
    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString() : string
    {
        return '[Twilio.FrontlineApi.V1]';
    }
}
